MultiStepForm compde edilen import * as S -> örneği güzel hem çirkin durmuyor hepsini import etmemizin aksine hem de
başına S. konulan elementlerin styled olduğunu ayırt edebiliyoruz jsx kısmında

Sidebar da background image verirken ../.. dersek bu gider public altında
arar o yüzden import ettik svgyi

Step-1 den gönderilen hasNextButton propsu zaten true demek ayrıyeten
hasNextButton = true demeye gerek yok!

NOT: Bu proede props aktarımlarına dikkat etmek gerekli çok fazla trick
var.

ilk stepimiz yapıyoruzdan devam et

verilerimiz backendden geliyormuş gibi bir senaryo için formsjson oluşturduk
gerçek projellerde placeholder bile backendden geliyor ve buton gibi
atomik parçalara kadar componentlere ayrılıyor proje.

error varsa olacak dinamik değişikliği gör styled componente props geçtik erroru ve ona göre değişecek inputumuz
ama burada önemli olan propsu üst eleman olan FormItem'a verdik ki yarın label vsde error anında değiştirmek istersek 
hepsine aynı kodu yazmadan FormItem'dan buralara aktarmak styled içinde FormItem'dan Input alt elemanına geçiş ve 
hasError propsu yakalayıp ona göre değişiklik yapmak önemli!

Step2'de S.Icon componenti içine assetsdeki urllleri veremediğimiz için
Icons diye bir obje ile bunu çözdük.!

Step2'de DEFAULT_PLAN tutulan planı gösteriyor default olarak arcade 
geliyor 1 yazmak yerine default_plan diye adlandırıyoruz ki daha sonra koda
baktığmızda anlayalım

Data'yı collect etme yani bir stepteki datayı(formData) diğerlerine aktarma işlemini Step bir form olduğu için bunun submit özelliğiyle yapacağız.